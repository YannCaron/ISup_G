V 11
2
LANG:5 11 sgRootPanel
LANG:1 11 sgRootPanel
PANEL,-1 -1 1110 860 N "_3DFace" 3
"$ILS_A"
"$Site"
"$SystemName"
"main()
{	
  init();
}" 0
 E E E E 1 -1 -1 0  10 10
""0  1
E "string ILSSelectionName = \"ILS\" + $ILS_A + \"Selection\";

void init()
{
  setLabels();  
  
  dpConnect(\"connectILSSelectUnselectBtn\", true,
            ILSSelectionName + \".Commands.ILSSelection\", ILSSelectionName + \".Status.ILSButtonEnable\"); 
 		
  dpConnect(\"connectILSSelectedText\", true, ILSSelectionName + \".Commands.ILSSelection\");
}

void ILSSelectBtnClicked()
{    
  if (getILSSelected() == \"--\")  
    selectILS();
  else 
    unSelectILS();
}

dyn_string getHistories()
{
  dyn_string ILSHistories;
   
  dpGet(ILSSelectionName + \".General.ILSHistories\", ILSHistories);
  return ILSHistories;
}

string getMachineName()
{
  return strtolower(getHostname());
}

void connectILSSelectedText(string selectedILSDpName, string selectedILS)
{
	if(selectedILS == \"--\")
    ILSSelectedText.visible = false;	
  else
    ILSSelectedText.visible = true;	
}

void setILSDirection(string direction)
{
  dpSet(ILSSelectionName + \".Commands.ILSSelection\", direction);
}

string getILSSelected()
{
  string ILSSelectedValue;
  
  dpGet(ILSSelectionName + \".Commands.ILSSelection\", ILSSelectedValue);
  return ILSSelectedValue;
}

void connectILSSelectUnselectBtn(string ILSSelectionDpName, string ILSSelection,
                                     string ILSSelectionButtonEnable, int ILSSelectionBtnEnable)
{
  SelectUnselectILSBtn.enabled = ILSSelectionBtnEnable;
  
  if(ILSSelection != \"--\")
    SelectUnselectILSBtn.text = \"Unselect ILS \" + $ILS_A;
  else 
    SelectUnselectILSBtn.text = \"Select ILS \" + $ILS_A;
}

void selectILS()
{
 	string confirmText;
	dyn_float df1;
	dyn_string ds1;
	
	confirmText = \"Do you really want to select ILS  \" + $ILS_A + \"?\";
	
	ChildPanelOnCentralModalReturn(\"sgFw/sgFwConfirmWindow.pnl\", \"Confirmation\", 
																		makeDynString(\"$1:\" + confirmText, \"$2:Yes\", \"$3:No\"), df1, ds1);

	if(ds1[1] == \"true\")
	{
    setILSDirection($ILS_A);
    sgHistoryAddEvent(getHistories(), SEVERITY_COMMAND, \"ILS \" + $ILS_A + \" selection command sent by \" + getMachineName());		
	}
}    

void unSelectILS()
{
 	string confirmText;
	dyn_float df1;
	dyn_string ds1;
	
	confirmText = \"Do you really want to unselect ILS  \" + $ILS_A + \"?\";
	
	ChildPanelOnCentralModalReturn(\"sgFw/sgFwConfirmWindow.pnl\", \"Confirmation\", 
																		makeDynString(\"$1:\" + confirmText, \"$2:Yes\", \"$3:No\"), df1, ds1);
	if(ds1[1] == \"true\")
	{
    setILSDirection(\"--\");
    sgHistoryAddEvent(getHistories(), SEVERITY_COMMAND, \"ILS \" + $ILS_A + \" unselection command sent by \" + getMachineName());		
	}
}    

void setLabels()
{
  setValue(\"PageLabel\", \"text\", \"ILS \" + $ILS_A + \" \" + $Site);
}

	//return if current client is the TWR client (on System Navir... && is client No 1)
// bool isTWRClient()
// {
// 	string systemName;	
// 	int manNum;
// 
// 	systemName = getSystemName();
// 	systemName = substr(systemName, 0, strpos(systemName, \"_\" ));
// 	
// 	manNum = myManNum();
// 	
// 	if (systemName == \"Navir\" && manNum == 1)
// 		return true;
// 	else
// 		return false;
// }


// return if the current HMI is an authorized machine to select ILS
// bool getIfAuthorizedCmdMachine()
// {
// 	dyn_string authorizedCmdMachineList;
// 	
// 	dpGet(ILSSelectionDpNamePrefix + \".General.AuthorizedSelectCmdMachine\", authorizedCmdMachineList);
// 	
		// force to lower case
// 	for (int i = 1; i <= dynlen(authorizedCmdMachineList); i++)
// 	{
// 		authorizedCmdMachineList[i] = strtolower(authorizedCmdMachineList[i]);
// 	}
// 	
// 	if(	dynContains(authorizedCmdMachineList, getMachineName()) > 0)
// 		return true;
// 	else return false;
// }	

// bool ILScomponentMakeAlarm(string currentStatus, string lastSatus, bool isSelected)
// {
// 	if(	isOPS(lastSatus) && isDEG(currentStatus) ||
// 			isOPS(lastSatus) && isUS(currentStatus) ||
// 			isOPS(lastSatus) && isWIP(currentStatus) ||
// 			isSBY(lastSatus) && isDEG(currentStatus) ||
// 			isSBY(lastSatus) && isUS(currentStatus) ||
// 			isDEG(lastSatus) && isUS(currentStatus) ||
// 			isDEG(lastSatus) && isWIP(currentStatus) && isSelected ||
// 			isWIP(lastSatus) && isUS(currentStatus) ||
// 			isWIP(lastSatus) && isDEG(currentStatus)
// 		)
// 		return true;
// 	else
// 		return false;
// }
// 
// void connectStatusesForBuzzer(string FWOkDpName, bool FwOkStatus, 
// 												string LLZDpName, string LLZAStatus, string DMEADpName, string DMEAStatus, string GPADpName, string GPAStatus,
// 												string ILSSelectedDpName, string ILSSelected)
// {	
// 	bool ILSAIsSelected;
// 	bool ILSBIsSelected; 
// 	
// 	if(ILSSelected == $ILS_A)
// 		ILSAIsSelected = true;
// 	else 
// 		ILSAIsSelected = false;
// 	
// 	if(ILSSelected == $ILS_B)
// 		ILSBIsSelected = true;
// 	else 
// 		ILSBIsSelected = false;
// 		
// 		if (!FwOkStatus ||
// 				ILScomponentMakeAlarm(LLZAStatus, LLZAoldStatus, ILSAIsSelected) ||
// 				ILScomponentMakeAlarm(GPAStatus, GPAoldStatus, ILSAIsSelected) ||
// 				ILScomponentMakeAlarm(DMEAStatus, DMEAoldStatus, ILSAIsSelected)
// 			)
// 	{
// 		startSound(PROJ_PATH +\"data\\\\sounds\\\\ding.wav\", true);
// 	}
// 	
//	update last statuses
// 	LLZAoldStatus = LLZAStatus;
// 	GPAoldStatus = GPAStatus;
// 	DMEAoldStatus = DMEAStatus;
// }

" 0
 2
"CBRef" "1"
"EClose" E
""
NC
1
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:5 6 Layer1
2 625
"ILSSelectedText"
""
1 400 365.5956373775063 E E E 1 E 1 E N "_WindowText" E N "Grau" E E
 E E
173 0 0 0 0 0
E E E
0
1
LANG:5 0 

1
"dashclr"N "_Transparent"
E E 0 2 1 0 1 E 1 0 0.9655172413793103 0 14.34482758620691 1 E 402 360 718 646
1 2 0 "0s" 0 0 0 65 0 0  402 360 1
1
LANG:5 27 Tahoma,-1,24,5,69,0,0,0,0,0
0 1
LANG:5 0 
2 0
"PageLabel"
""
1 5.000000000000091 4.85 E E E 1 E 1 E N {0,0,0} E N {204,204,204} E E
 E E
1 0 0 0 0 0
E E E
0
2
LANG:5 0 
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E 0.9999999999999999 0 1.05 -4.999999999999998 -5.65 1 E 15 15 1101 51
1 2 0 "0s" 0 0 0 65 0 0  15 15 1
2
LANG:5 27 Tahoma,-1,29,5,69,0,0,0,0,0
LANG:1 107 -microsoft windows-Tahoma-bold-r-normal-*-*-260-100-100-*-*-iso8859-1|-29,0,0,0,700,0,0,0,0,3,2,1,34,Tahoma
0 2
LANG:5 10 ILS A Site
LANG:1 4 AFPS
1 649 72 "" 46
0
1 650 73 "" 46
0
1 653 119 "" 11
0
1 654 144 "" 46
0
13 648
"SelectUnselectILSBtn"
""
1 400 190 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
199 0 0 0 0 0
E E E
0
1
LANG:5 0 

0
1
LANG:5 27 Tahoma,-1,24,5,69,0,0,0,0,0
0  398 188 722 242

T 
1
LANG:5 21 Select/UnSelect ILS A
"main()
{
  ILSSelectBtnClicked();
}" 0
 E E E
1 655 145 "" 1
0
1 656 145 "" 0
0
0
LAYER, 1 
1
LANG:5 6 Layer2
1 651 102 "" 13
0
1 652 102 "" 14
0
0
LAYER, 2 
1
LANG:5 6 Layer3
0
LAYER, 3 
1
LANG:5 6 Layer4
0
LAYER, 4 
1
LANG:5 6 Layer5
0
LAYER, 5 
1
LANG:5 6 Layer6
0
LAYER, 6 
1
LANG:5 6 Layer7
0
LAYER, 7 
1
LANG:5 6 Layer8
0
3 72 "Group26" -1
"Navir\\objects\\NavirILSOPSBlock.pnl" 210 235 T 109 0.7 0 0.3 273 309.5
3
"$LabelsNum""1"
"$SystemName""Navir_EM:"
"$SystemStatus""ILS22.HMIStatuses.LOC"
3 73 "Group27" -1
"Navir\\objects\\NavirILSOPSBlock.pnl" 210 426 T 110 0.7 0 0.3 273 342.2
3
"$LabelsNum""1"
"$SystemName""Navir_EM:"
"$SystemStatus""ILS22.HMIStatuses.DME"
3 102 "" -1
"Navir\\ILS\\ILS_ICAO_Clock.pnl" 510 220 T 148 0.92452148790177 0 0.857142857142857 223.6251354279522 200.5714285714286
6
"$b_pvssRange""FALSE"
"$dpe_percentage1""$SystemName + \"ILS\" + $ILS_A+ \"Selection.Status.ILSTimer\""
"$f_max""60.000"
"$f_min""0.000"
"$s_col1""sgStdOPSColor"
"$s_col2""sgStdABSColor"
3 119 "" -1
"objects\\sgFwHistory.pnl" 450 730 T 171 1 0 1 -450 -30
2
"$SystemHistory""ILS22Selection.History"
"$SystemName""Navir_EM:"
3 144 "PANEL_REF145" -1
"Navir\\objects\\NavirILSOPSBlock.pnl" 210 330 T 196 0.7 0 0.3 273 461
3
"$LabelsNum""1"
"$SystemName""Navir_EM:"
"$SystemStatus""ILS22.HMIStatuses.GP"
3 145 "PANEL_REF123" -1
"Navir\\objects\\HeartBeatChecker.pnl" -5.0000000000004 430 T 200 1.181818181818181 0 0.888888888888889 969.9999999999994 277.7777777777778
1
"$SystemName""$SystemName"
0
