V 10
2
LANG:5 8 (NoName)
LANG:1 8 (NoName)
PANEL,312 160 158 51 N "_3DFace" 8
"$Command"
"$ConfirmationText"
"$HistoryName"
"$Label"
"$NavaidName"
"$NavaidNr"
"$StationName"
"$SystemName"
"main()
{
	Button.toolTipText = $Label + \" command\";

	Button.text = $Label;
	
	if(($Label == \"\")||($Label == \" \")||($Label == \"SPARE\"))
		Button.visible = false;
		
	machineName = getHostname(); 
}" 0
"main()
{
// to be sure that the point is 0 (if window is to quickly closed!)
	if(dpName != \"\") // if dpName is empty, no dpSet
		dpSet(dpName, \"0\");
}" 0
E E E 1 -1 -1 0  10 10
"" 0 1
E"global string dpName;
global bool atLeastOneLinkOk;
global string commandPath;
global string machineName;

void addCommandEvent(string eventText)
{
	if($HistoryName != \"\")
	{
		if(dpExists($SystemName + $HistoryName))
		{
			sgHistoryAddEvent($SystemName + $HistoryName, SEVERITY_COMMAND, eventText);
		}
		else{
			DebugN(\"''\" + eventText + \"'' . But no Event done!\");
			DebugN(\"History Name: ''\" + $HistoryName + \"'' does not exist for CMDButton; Command: ''\" + $Label + \"'' !\");
		}
	}
}

void updateCmdDpNameLinksStatuses() // Refresh the command dpName. Return true if both
{	// Check if link is opened for PSTN link
	bool isNotPSTNStation;
	string activeChain;
	string linkAStatus;
	string linkBStatus;
	bool bothLinksOk;
	
	dpGet($SystemName + $StationName + \".General.IsStationOnDedicatedLine\", isNotPSTNStation,
				$SystemName + ACTIVE_CHAIN, activeChain,
				$SystemName + $StationName + \".Structured.Links.LinkAStatus.Status\", linkAStatus,
				$SystemName + $StationName + \".Structured.Links.LinkBStatus.Status\", linkBStatus);

	atLeastOneLinkOk = isOPS(linkAStatus) || isOPS(linkBStatus);
	bothLinksOk = isOPS(linkAStatus) && isOPS(linkBStatus);

	if(bothLinksOk)
	{	// if both links are ok, we choose the open PSTN link if opened, else the active chain way
		if(!isNotPSTNStation) // is PSTN Station
		{
		//	DebugN(\"NavirCmdButton.pnl: updateDpNameLinksStatuses: in !isNotPSTNStation\");
			bool linkAOpen;
			bool linkBOpen;
			
			dpGet($SystemName + $StationName + \".Structured.Links.ComOpenA.State\", linkAOpen,
						$SystemName + $StationName + \".Structured.Links.ComOpenB.State\", linkBOpen);
			
			if(linkAOpen)  //-> send through chain A
			{
			//	DebugN(\"NavirCmdButton.pnl: updateDpNameLinksStatuses: in !isNotPSTNStation linkAOpen\");
				dpName = $SystemName + $StationName + \".RawDatas.Commands.Navaid_\" + $NavaidNr + \".Cmd_OutA\";
				commandPath = \"A\";
			}
			else
			{	
				if(linkBOpen) //-> send through chain B
				{
			//		DebugN(\"NavirCmdButton.pnl: updateDpNameLinksStatuses: in !isNotPSTNStation linkBOpen\");
					dpName = $SystemName + $StationName + \".RawDatas.Commands.Navaid_\" + $NavaidNr + \".Cmd_OutB\";
					commandPath = \"B\";
				}
				else // no links open -> send on active chain	
				{
				//	DebugN(\"NavirCmdButton.pnl: updateDpNameLinksStatuses: in !isNotPSTNStation no links open -> on active chain\");				
					dpName = $SystemName + $StationName + \".RawDatas.Commands.Navaid_\" + $NavaidNr + \".Cmd_Out\" + activeChain;			
					commandPath = activeChain;
				}
			}
		}		
		else
		{ // Station isn't a PSTN station  -> send through active chain
			//DebugN(\"NavirCmdButton.pnl: updateDpNameLinksStatuses: in is no a PSTN Station\");
			dpName = $SystemName + $StationName + \".RawDatas.Commands.Navaid_\" + $NavaidNr + \".Cmd_Out\" + activeChain;					
			commandPath = activeChain;
		}
	}
	else // both links aren't ok
	{
		if(atLeastOneLinkOk)  // -> no choice to send the command
		{
			if(isOPS(linkAStatus))
			{
		//		DebugN(\"NavirCmdButton.pnl: updateDpNameLinksStatuses: in at least one link ok, A is OPS\");	
				dpName = $SystemName + $StationName + \".RawDatas.Commands.Navaid_\" + $NavaidNr + \".Cmd_OutA\";	
				commandPath = \"A\";
			}
			else  // -> link B is OK
			{
			//	DebugN(\"NavirCmdButton.pnl: updateDpNameLinksStatuses: in at least one link ok, B is OPS\");				
				dpName = $SystemName + $StationName + \".RawDatas.Commands.Navaid_\" + $NavaidNr + \".Cmd_OutB\";	
				commandPath = \"B\";
			}
		}
		else // ->no links ok!
		{
			dpName = \"\"; // no available dpName set!
			DebugN(\"For Station \" + $StationName + \", no available links to write! No command sent!\");
			addCommandEvent(\"For Station \" + $StationName + \", no available links! No command sent by \" + machineName + \"!\");
		}
	}		
}" 0
 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:5 6 Layer1
13 0
"Button"
""
1 10 10 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
EE E
0
2
LANG:5 0 
LANG:1 0 
0
2
LANG:5 109 -microsoft windows-Tahoma-normal-r-normal-*-*-170-100-100-*-*-iso8859-1|-19,0,0,0,400,0,0,0,0,3,2,1,34,Tahoma
LANG:1 109 -microsoft windows-Tahoma-normal-r-normal-*-*-170-100-100-*-*-iso8859-1|-19,0,0,0,400,0,0,0,0,3,2,1,34,Tahoma
0 ""
8 8 152 42
T 
2
LANG:5 10 Navaid CMD
LANG:1 10 PRIMUS CMD
"main()
{
	dyn_string ds;
	dyn_string df;
	string EventText;
	int res;
	
	res = setValue(\"Close\", \"enabled\", \"false\");	
	
	updateCmdDpNameLinksStatuses();
	
	if(dpName != \"\") // if dpName is empty, no dpSet
	{
		if($ConfirmationText != \"\")
		{
			ChildPanelOnCentralModalReturn(\"sgFw/sgFwConfirmWindow.pnl\", \"Confirmation\", 
			makeDynString(\"$1:Do you really want to \" + $ConfirmationText + \" ?\", \"$2:Yes\", \"$3:No\"), df, ds);
			
			if(ds[1] == \"true\"){
				dpSet(dpName, $Command); 
				
				delay(0,500);
				dpSet(dpName, \"0\"); //Rewrite with \"0\" for 2 same consecutives commands
	//				DebugN(\"Send made without confirmation\");
				// Add Event
				EventText = $NavaidName + \" <\" + $ConfirmationText + \"> sent by \" + machineName + \" through \" + $SystemName + \" chain \" + commandPath;
				addCommandEvent(EventText);
			}					
		}
		else
		{
				dpSet(dpName, $Command);
				delay(0,500);
				dpSet(dpName, \"0\");//Rewrite with \"\" for 2 same consecutives commands
	//			DebugN(\"Send made without confirmation\");
				// Add Event, if no confirmation, only the label name
				EventText = $NavaidName + \" <\" + $Label + \"> sent by \" + machineName + \" through \" + $SystemName + \" chain \" + commandPath;
				addCommandEvent(EventText);
		}
	}
//	Close Command window at terminate
	PanelOffPanel(\"Navaid command Window\");	
}
" 0
 E E E
0
LAYER, 1 
1
LANG:5 6 Layer2
0
LAYER, 2 
1
LANG:5 6 Layer3
0
LAYER, 3 
1
LANG:5 6 Layer4
0
LAYER, 4 
1
LANG:5 6 Layer5
0
LAYER, 5 
1
LANG:5 6 Layer6
0
LAYER, 6 
1
LANG:5 6 Layer7
0
LAYER, 7 
1
LANG:5 6 Layer8
0
0